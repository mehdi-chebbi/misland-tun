# Generated by Django 3.1 on 2022-03-30 07:13

from django.db import migrations

from django.db import migrations
from django.db import connection
from django.apps import apps

src_prefix="ldms"
dest_prefix="user"

def forwards(apps, schema_editor):
	changed_tables = [
		   'UserSettings'
	   ]
	# model._meta.get_fields()

	same_tables = []
	tables_lst = []
	
	# Get active fields for a model. Some fields may have been dropped, so we dont want to select such
	for tbl in same_tables:
		model = apps.get_model('ldms', tbl)
		fields = " , ".join([x.column for x in model._meta.get_fields() if hasattr(x, 'column')])
		tables_lst.append([tbl.lower(), fields])

	with connection.cursor() as cursor: 
		# 1. copy specific fields in settings table
		sql = """
			INSERT INTO user_usersettings (
					enable_user_account_email_activation,
					account_activation_url,
					change_password_url
				)
				SELECT
					enable_user_account_email_activation,
					account_activation_url,
					change_password_url
				FROM
					ldms_systemsettings;
			"""
		cursor.execute(sql) 

		# 2. Import tables without GIS Tables	
		for table in tables_lst:
			sql = """
				INSERT INTO {dest}_{table} ({dest_fields}) SELECT {src_fields} FROM {src}_{table} 
				""".format(dest=dest_prefix, 
						   src=src_prefix,
						   table=table[0],
						   dest_fields=table[1],
						   src_fields=table[1].replace(" geom ", "ST_SetSRID(geom, 4326)")# Set SRID to allow copying of geom
				          )
			cursor.execute(sql) 

def backwards(apps, schema_editor):
	all_tables = [
		'UserSettings',
	   ]

	for table in all_tables:
		exec_sql("""
			DELETE FROM {0}_{1}""".format(dest_prefix, table)			
		)

def exec_sql(sql):
	with connection.cursor() as cursor:
		cursor.execute(sql) 

class Migration(migrations.Migration):

    dependencies = [
        ('user', '0004_auto_20221216_1600'),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
		   [
			   migrations.RunPython(forwards, backwards)
		   ]
	   )
    ]
