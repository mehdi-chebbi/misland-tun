# Generated by Django 3.1 on 2024-10-29 10:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MonitoringLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('execution_name', models.CharField(help_text='Execution Name', max_length=255, null=True)),
                ('params', models.TextField(blank=True, help_text='Parameters to execution', null=True)),
                ('caller_id', models.CharField(blank=True, help_text='Calling object id', max_length=255, null=True)),
                ('caller_type', models.CharField(help_text='Calling object type', max_length=255, null=True)),
                ('caller_details', models.CharField(help_text='Calling object details', max_length=255, null=True)),
                ('execution_start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('pre_execution_stats', models.JSONField(blank=True, help_text='Resources pre-execution', null=True)),
                ('post_execution_stats', models.JSONField(blank=True, help_text='Resources post-execution', null=True)),
                ('boot_time', models.DateTimeField(blank=True, help_text='Server boot time', null=True)),
                ('uptime_minutes', models.IntegerField(blank=True, default=False, help_text='Uptime in minutes?', null=True)),
                ('execution_end_time', models.DateTimeField(blank=True, null=True)),
                ('is_completed', models.BooleanField(blank=True, default=False, help_text='Has the monitoring completed ?', null=True)),
                ('is_critical_memory_usage', models.BooleanField(blank=True, default=False, help_text='Is memory usage critical?', null=True)),
                ('is_critical_cpu_usage', models.BooleanField(blank=True, default=False, help_text='Is cpu usage critical?', null=True)),
                ('is_critical_disk_usage', models.BooleanField(blank=True, default=False, help_text='Is disk usage critical?', null=True)),
                ('is_critical_temp', models.BooleanField(blank=True, default=False, help_text='Is temperature critical?', null=True)),
                ('mem_profile', models.TextField(blank=True, help_text='Memory profile', null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_monitoringlog_creator', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_monitoringlog_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('topic_name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255)),
                ('sort_order', models.IntegerField(default=0, help_text='The order you would like the topic to be displayed', verbose_name='Sort order')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_topic_creator', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_topic_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Topic',
                'verbose_name_plural': 'Topics',
                'ordering': ['sort_order', 'topic_name'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(help_text='The question details', verbose_name='question')),
                ('answer', models.TextField(blank=True, help_text='The answer text', verbose_name='answer')),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, verbose_name='slug')),
                ('status', models.IntegerField(choices=[(1, 'Active'), (0, 'Inactive'), (2, 'Group Header')], default=0, help_text="Only questions with their status set to 'Active' will be displayed. Questions marked as 'Group Header are treated as views", verbose_name='status')),
                ('protected', models.BooleanField(default=False, help_text='Set true if this question is only visible to authenticated users', verbose_name='is protected')),
                ('sort_order', models.IntegerField(default=0, help_text='The order you would like this question to be displayed', verbose_name='Sort order')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created on')),
                ('updated_on', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='updated on')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='common.topic', verbose_name='topic')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MonitoringLogItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_entry', models.DateTimeField(blank=True, null=True)),
                ('cpu', models.CharField(help_text='CPU utilized(%)', max_length=255, null=True)),
                ('memory', models.CharField(help_text='Memory usage (GB)', max_length=255, null=True)),
                ('disk', models.CharField(help_text='Disk usage (GB)', max_length=255, null=True)),
                ('highest_temp', models.CharField(help_text='Highest Temp (C)', max_length=255, null=True)),
                ('monitoring_log', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.monitoringlog')),
            ],
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('image_name', models.CharField(help_text='Name of image', max_length=255)),
                ('image_file', models.FileField(help_text='Attach image', max_length=255, upload_to='')),
                ('image_desc', models.TextField(blank=True, help_text='Image description')),
                ('is_published', models.BooleanField(help_text='If not published, the image will not be shown to users')),
                ('is_document', models.BooleanField(default=0, help_text='Is this a document')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gallery_creator', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gallery_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Gallery',
            },
        ),
        migrations.CreateModel(
            name='CommonSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('backend_url', models.CharField(default='http://0.0.0.0/', help_text='URL of server (without port) hosting the backend.', max_length=200, verbose_name='Backend url')),
                ('backend_port', models.IntegerField(default=80, help_text='Port from which the system is served', verbose_name='Backend port')),
                ('override_backend_port', models.BooleanField(default=True, help_text='If checked, the system will override the default port and use the value of Backend port. Important when constructing URL of computed Raster')),
                ('enable_execution_monitoring', models.BooleanField(default=False, help_text='Enable monitoring of computations')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_commonsettings_creator', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_commonsettings_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'General Settings',
                'abstract': False,
            },
        ),
    ]
