# Generated by Django 3.1 on 2024-10-29 10:04

import common_gis.models
from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminLevelOne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('gid_0', models.CharField(max_length=50)),
                ('name_0', models.CharField(max_length=250)),
                ('gid_1', models.CharField(max_length=50)),
                ('name_1', models.CharField(max_length=250)),
                ('varname_1', models.CharField(blank=True, max_length=250, null=True)),
                ('nl_name_1', models.CharField(blank=True, max_length=250, null=True)),
                ('type_1', models.CharField(blank=True, max_length=250, null=True)),
                ('engtype_1', models.CharField(blank=True, max_length=250, null=True)),
                ('cc_1', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('hasc_1', models.CharField(blank=True, max_length=250, null=True)),
                ('cpu', models.CharField(blank=True, max_length=250, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
            options={
                'ordering': ('name_0', 'name_1'),
            },
        ),
        migrations.CreateModel(
            name='AdminLevelTwo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('gid_0', models.CharField(max_length=50)),
                ('name_0', models.CharField(max_length=250)),
                ('gid_1', models.CharField(max_length=250)),
                ('name_1', models.CharField(max_length=250)),
                ('nl_name_1', models.CharField(blank=True, max_length=250, null=True)),
                ('gid_2', models.CharField(max_length=250)),
                ('name_2', models.CharField(max_length=250)),
                ('varname_2', models.CharField(blank=True, max_length=250, null=True)),
                ('nl_name_2', models.CharField(blank=True, max_length=250, null=True)),
                ('type_2', models.CharField(blank=True, max_length=250, null=True)),
                ('engtype_2', models.CharField(blank=True, max_length=250, null=True)),
                ('cc_2', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('hasc_2', models.CharField(blank=True, max_length=250, null=True)),
                ('cpu', models.CharField(blank=True, max_length=250, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('admin_one', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common_gis.adminlevelone')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_adminleveltwo_creator', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_adminleveltwo_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name_0', 'name_1', 'name_2'),
            },
        ),
        migrations.CreateModel(
            name='AdminLevelZero',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('gid_0', models.CharField(max_length=50)),
                ('name_0', models.CharField(max_length=250)),
                ('region_name', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('cpu', models.CharField(blank=True, max_length=250, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_adminlevelzero_creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name_0',),
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('type', models.IntegerField()),
                ('width', models.IntegerField()),
                ('precision', models.IntegerField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_attribute_creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ComputedResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('cache_key', models.TextField(help_text='Cache key')),
                ('custom_polygon', models.TextField(blank=True, help_text='Custom polygon', null=True)),
                ('computation_type', models.CharField(blank=True, help_text='The type of computation', max_length=255, null=True)),
                ('change_enum', models.CharField(blank=True, help_text='Change Enum applied', max_length=255, null=True)),
                ('datasource', models.CharField(choices=[('', ''), ('Hansen', 'Hansen'), ('LULC', 'LULC'), ('Landsat 7', 'Landsat 7'), ('Landsat 8', 'Landsat 8'), ('Modis', 'Modis'), ('Sentinel 2', 'Sentinel 2')], default='', help_text='Datasource', max_length=255)),
                ('nodata', models.FloatField(blank=True, default=0, null=True)),
                ('prefix', models.CharField(blank=True, help_text='Prefix to be prepended to resulting raster', max_length=255, null=True)),
                ('resolution', models.FloatField(blank=True, default=0, null=True)),
                ('subdir', models.CharField(blank=True, help_text='Subdirectory for the resulting raster', max_length=255, null=True)),
                ('raster_file', models.FileField(help_text='Computed raster file', null=True, upload_to='')),
                ('start_year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator, common_gis.models.max_year_validator])),
                ('end_year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator, common_gis.models.max_year_validator])),
                ('arguments', models.TextField(blank=True, help_text='Computation arguments', null=True)),
                ('results', models.TextField(blank=True, help_text='Results of the computation', null=True)),
                ('succeeded', models.BooleanField(default=False)),
                ('completed_on', models.DateTimeField(blank=True, null=True)),
                ('request', models.TextField(blank=True, null=True)),
                ('queue_msg', models.TextField(help_text='Message when computation is queued')),
                ('admin_one', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin_level_one', to='common_gis.adminlevelone')),
                ('admin_two', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin_level_two', to='common_gis.adminleveltwo')),
                ('admin_zero', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin_level_zero', to='common_gis.adminlevelzero')),
            ],
            options={
                'ordering': ('created_on',),
            },
        ),
        migrations.CreateModel(
            name='ContinentalAdminLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('object_id', models.IntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('shape_length', models.FloatField(blank=True, default=0, null=True)),
                ('shape_area', models.FloatField(blank=True, default=0, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_continentaladminlevel_creator', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_continentaladminlevel_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='PublishedComputation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('computation_type', models.CharField(choices=[('Aridity Index', 'Aridity Index'), ('Climate Quality Index', 'Climate Quality Index'), ('Coastal Vulnerability Index', 'Coastal Vulnerability Index'), ('ESAI', 'ESAI'), ('Forest Carbon Emission', 'Forest Carbon Emission'), ('Forest Change', 'Forest Change'), ('Forest Fire', 'Forest Fire'), ('Forest Fire Risk', 'Forest Fire Risk'), ('ILSWE', 'ILSWE'), ('LULC', 'LULC'), ('LULC Change', 'LULC Change'), ('Land Degradation', 'Land Degradation'), ('Management Quality Index', 'Management Quality Index'), ('Productivity', 'Productivity'), ('Productivity Performance', 'Productivity Performance'), ('Productivity State', 'Productivity State'), ('Productivity Trajectory', 'Productivity Trajectory'), ('RUSLE', 'RUSLE'), ('SOC', 'SOC'), ('Soil Quality Index', 'Soil Quality Index'), ('Vegetation Quality Index', 'Vegetation Quality Index')], default='', max_length=100)),
                ('style', models.TextField(blank=True, help_text='Styled Layer Descriptor (SLD)', null=True)),
                ('published', models.BooleanField(default=True, help_text='If checked, only the specified years will be enabled for computation', null=True)),
                ('admin_zero', models.ForeignKey(blank=True, default='', help_text='Associated country. Leave blank to associate with all countries', null=True, on_delete=django.db.models.deletion.CASCADE, to='common_gis.adminlevelzero')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_publishedcomputation_creator', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_publishedcomputation_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Published Computations',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RasterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_rastertype_creator', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_rastertype_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RegionalAdminLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('object_id', models.IntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('shape_length', models.FloatField(blank=True, default=0, null=True)),
                ('shape_area', models.FloatField(blank=True, default=0, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('continent_admin', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common_gis.continentaladminlevel')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_regionaladminlevel_creator', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_regionaladminlevel_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ScheduledPreComputation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('computation_type', models.CharField(choices=[('Aridity Index', 'Aridity Index'), ('Climate Quality Index', 'Climate Quality Index'), ('Coastal Vulnerability Index', 'Coastal Vulnerability Index'), ('ESAI', 'ESAI'), ('Forest Carbon Emission', 'Forest Carbon Emission'), ('Forest Change', 'Forest Change'), ('Forest Fire', 'Forest Fire'), ('Forest Fire Risk', 'Forest Fire Risk'), ('ILSWE', 'ILSWE'), ('LULC', 'LULC'), ('LULC Change', 'LULC Change'), ('Land Degradation', 'Land Degradation'), ('Management Quality Index', 'Management Quality Index'), ('Productivity', 'Productivity'), ('Productivity Performance', 'Productivity Performance'), ('Productivity State', 'Productivity State'), ('Productivity Trajectory', 'Productivity Trajectory'), ('RUSLE', 'RUSLE'), ('SOC', 'SOC'), ('Soil Quality Index', 'Soil Quality Index'), ('Vegetation Quality Index', 'Vegetation Quality Index')], default='', max_length=100)),
                ('change_enum', models.CharField(blank=True, help_text='Change Enum applied', max_length=255, null=True)),
                ('admin_level', models.CharField(choices=[('', ''), ('-2', 'Continental'), ('-1', 'Regional'), ('0', 'Country')], default=None, max_length=50, null=True)),
                ('datasource', models.CharField(choices=[('', ''), ('Hansen', 'Hansen'), ('LULC', 'LULC'), ('Landsat 7', 'Landsat 7'), ('Landsat 8', 'Landsat 8'), ('Modis', 'Modis'), ('Sentinel 2', 'Sentinel 2')], default='', help_text='Datasource', max_length=255, null=True)),
                ('start_year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator, common_gis.models.max_year_validator])),
                ('end_year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator, common_gis.models.max_year_validator])),
                ('started_on', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('', ''), ('Queued', 'Queued'), ('Processing', 'Processing'), ('Failed', 'Failed'), ('Succeeded', 'Succeeded')], default='', max_length=100)),
                ('args', models.TextField(blank=True, null=True)),
                ('method', models.CharField(max_length=128)),
                ('error', models.TextField(blank=True, null=True)),
                ('succeeded', models.BooleanField(default=False)),
                ('completed_on', models.DateTimeField(blank=True, null=True)),
                ('admin_zero', models.ForeignKey(blank=True, default='', help_text='Country', null=True, on_delete=django.db.models.deletion.CASCADE, to='common_gis.adminlevelzero')),
                ('continent', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='common_gis.continentaladminlevel')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_scheduledprecomputation_creator', to=settings.AUTH_USER_MODEL)),
                ('region', models.ForeignKey(blank=True, default='', help_text='Region', null=True, on_delete=django.db.models.deletion.CASCADE, to='common_gis.regionaladminlevel')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_scheduledprecomputation_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Scheduled PreComputations',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShapeFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('filename', models.CharField(max_length=255)),
                ('srs', models.CharField(blank=True, max_length=254)),
                ('geom_type', models.CharField(max_length=50)),
                ('encoding', models.CharField(blank=True, max_length=20)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_shapefile_creator', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_shapefile_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ScheduledTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('owner', models.CharField(max_length=128)),
                ('name', models.CharField(max_length=128)),
                ('job_id', models.CharField(max_length=128)),
                ('result', models.TextField(blank=True, null=True)),
                ('error', models.TextField(blank=True, null=True)),
                ('method', models.CharField(max_length=128)),
                ('args', models.TextField(blank=True, null=True)),
                ('orig_args', models.TextField(blank=True, help_text='Original payload as passed by the user before modification', null=True)),
                ('request', models.TextField(blank=True, null=True)),
                ('status', models.CharField(max_length=50)),
                ('succeeded', models.BooleanField(default=False)),
                ('completed_on', models.DateTimeField(blank=True, null=True)),
                ('notified_owner', models.BooleanField(default=False)),
                ('notified_on', models.DateTimeField(blank=True, null=True)),
                ('message', models.TextField(blank=True, help_text='The message sent to the user', null=True)),
                ('change_enum', models.CharField(blank=True, help_text='Change Enum applied', max_length=255, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_scheduledtask_creator', to=settings.AUTH_USER_MODEL)),
                ('scheduled_precomputation', models.ForeignKey(blank=True, default='', help_text='Scheduled PreComputation associated with this scheduled task', null=True, on_delete=django.db.models.deletion.CASCADE, to='common_gis.scheduledprecomputation')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_scheduledtask_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RasterValueMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=250, null=True)),
                ('color', models.CharField(blank=True, default='#FF0000', max_length=50, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_rastervaluemapping_creator', to=settings.AUTH_USER_MODEL)),
                ('raster_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common_gis.rastertype')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_rastervaluemapping_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Raster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(help_text='Raster layer name', max_length=100, null=True)),
                ('description', models.TextField(blank=True, help_text='Description', null=True)),
                ('raster_year', models.PositiveIntegerField(default=2024, help_text='Year', validators=[django.core.validators.MinValueValidator, common_gis.models.max_year_validator])),
                ('raster_category', models.CharField(choices=[('', ''), ('Aridity Index', 'Aridity Index'), ('Aspect', 'Aspect'), ('Climatic Erosivity', 'Climatic Erosivity'), ('Coastal Slope', 'Coastal Slope'), ('Conservation Practices', 'Conservation Practices'), ('Cover Management', 'Cover Management'), ('Drought Resistance', 'Drought Resistance'), ('Ecological Units', 'Ecological Units'), ('Erodible Fraction', 'Erodible Fraction'), ('Erosion Protection', 'Erosion Protection'), ('Evapotranspiration', 'Evapotranspiration'), ('Fire Risk', 'Fire Risk'), ('Forest Activity Map', 'Forest Activity Map'), ('Forest Loss', 'Forest Loss'), ('Geomorphology', 'Geomorphology'), ('LULC', 'LULC'), ('Land Use Density', 'Land Use Density'), ('MSAVI', 'MSAVI'), ('NDVI', 'NDVI'), ('Plant Cover', 'Plant Cover'), ('Population Density', 'Population Density'), ('Rainfall', 'Rainfall'), ('Rainfall Erosivity', 'Rainfall Erosivity'), ('SAVI', 'SAVI'), ('SOC', 'SOC'), ('Sea Level Change', 'Sea Level Change'), ('Shoreline Erosion/Accretion', 'Shoreline Erosion/Accretion'), ('Slope Steepness', 'Slope Steepness'), ('Soil Crust', 'Soil Crust'), ('Soil Drainage', 'Soil Drainage'), ('Soil Erodibility', 'Soil Erodibility'), ('Soil Group', 'Soil Group'), ('Soil Parent Material', 'Soil Parent Material'), ('Soil Rock Fragments', 'Soil Rock Fragments'), ('Soil Roughness', 'Soil Roughness'), ('Soil Slope', 'Soil Slope'), ('Soil Texture', 'Soil Texture'), ('Tide Range', 'Tide Range'), ('Tree Cover Loss', 'Tree Cover Loss'), ('Vegetation Cover', 'Vegetation Cover'), ('Wave Height', 'Wave Height')], default='', help_text='Raster Category', max_length=100)),
                ('rasterfile', models.FileField(help_text='Raster source file', null=True, upload_to='')),
                ('raster_source', models.CharField(choices=[('', ''), ('Hansen', 'Hansen'), ('LULC', 'LULC'), ('Landsat 7', 'Landsat 7'), ('Landsat 8', 'Landsat 8'), ('Modis', 'Modis'), ('Sentinel 2', 'Sentinel 2')], default='', help_text='Datasource', max_length=50)),
                ('values_type', models.CharField(choices=[('Discrete', 'Discrete'), ('Continuous', 'Continuous')], default='Discrete', help_text='Does the raster contain continuous or discrete values?', max_length=50, null=True)),
                ('admin_level', models.CharField(choices=[('', ''), ('-2', 'Continental'), ('-1', 'Regional'), ('0', 'Country')], default=None, max_length=50, null=True)),
                ('resolution', models.FloatField(blank=True, help_text='Resolution', null=True)),
                ('uperleftx', models.FloatField(blank=True, help_text='Upper Left X', null=True)),
                ('uperlefty', models.FloatField(blank=True, help_text='Upper left Y', null=True)),
                ('width', models.IntegerField(blank=True, help_text='Width', null=True)),
                ('height', models.IntegerField(blank=True, help_text='Height', null=True)),
                ('scalex', models.FloatField(blank=True, help_text='Scale X', null=True)),
                ('scaley', models.FloatField(blank=True, help_text='Scale Y', null=True)),
                ('skewx', models.FloatField(blank=True, help_text='Skew X', null=True)),
                ('skewy', models.FloatField(blank=True, help_text='Skew Y', null=True)),
                ('numbands', models.IntegerField(blank=True, help_text='Number of bands', null=True)),
                ('srs_wkt', models.TextField(blank=True, help_text='SRS WKT', null=True)),
                ('srid', models.PositiveSmallIntegerField(blank=True, help_text='SRS ID', null=True)),
                ('max_zoom', models.PositiveSmallIntegerField(blank=True, help_text='Maximum Zoom', null=True)),
                ('admin_zero', models.ForeignKey(blank=True, default='', help_text='Country', null=True, on_delete=django.db.models.deletion.CASCADE, to='common_gis.adminlevelzero')),
                ('continent_admin', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='common_gis.continentaladminlevel')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_raster_creator', to=settings.AUTH_USER_MODEL)),
                ('raster_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common_gis.rastertype')),
                ('regional_admin', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='common_gis.regionaladminlevel')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_raster_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-raster_year', 'name', 'raster_category', 'raster_source'],
            },
        ),
        migrations.CreateModel(
            name='PublishedComputationYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('published_year', models.PositiveIntegerField(default=2024, validators=[django.core.validators.MinValueValidator, common_gis.models.max_year_validator])),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_publishedcomputationyear_creator', to=settings.AUTH_USER_MODEL)),
                ('published_computation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='published_computations', to='common_gis.publishedcomputation', verbose_name='published_computation')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_publishedcomputationyear_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GISSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('enable_guest_user_limit', models.BooleanField(default=False, help_text='If checked, guest users will process polygons upto a specific polygon size')),
                ('guest_user_polygon_size_limit', models.FloatField(help_text='Maximum size of polygon in hectares that anonymous users can process using the system')),
                ('enable_signedup_user_limit', models.BooleanField(default=False, help_text='If checked, Logged in users will process polygons upto a specific polygon size')),
                ('signedup_user_polygon_size_limit', models.FloatField(default=1, help_text='Maximum size of polygon in hectares that Logged in users can process using the system')),
                ('enable_task_scheduling', models.BooleanField(help_text='If checked, user GIS tasks will be scheduled')),
                ('task_results_url', models.CharField(default='http://0.0.0.0:8080/#/dashboard/results/', help_text='Url to redirect user when results of scheduled task are available. Task id will be appended at the end after /', max_length=255)),
                ('raster_clipping_algorithm', models.CharField(blank=True, choices=[('All Touched', 'All Touched'), ('Pixel Center', 'Pixel Center')], default='All Touched:', help_text='All Touched=Include a pixel in the mask if it touches any of the shapes.\n\t\t\t\tPixel Center= Include a pixel only if its center is within one of the shapes', max_length=20)),
                ('enable_cache', models.BooleanField(blank=True, default=True, help_text='If enabled, results of GIS computation will be cached for a period as specified by the cache limit field')),
                ('cache_limit', models.IntegerField(default=86400, help_text='Number of seconds that results will be cached.')),
                ('enable_tiles', models.BooleanField(blank=True, default=False, help_text='If enabled, a WMS link will be returned for all analysis to allow rendering of tiles')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_gissettings_creator', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_gissettings_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'GIS Settings',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('feature_name', models.CharField(default='', max_length=255)),
                ('geom_geometrycollection', django.contrib.gis.db.models.fields.GeometryCollectionField(blank=True, null=True, srid=4326)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_feature_creator', to=settings.AUTH_USER_MODEL)),
                ('shapefile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common_gis.shapefile')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_feature_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataImportSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('raster_data_file', models.FileField(help_text='JSON file that contains definition of rasters to be imported into the system from disk', upload_to='')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_dataimportsettings_creator', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_dataimportsettings_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Data Import Settings',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomShapeFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('shapefile_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Description of the vector')),
                ('shapefile', models.FileField(upload_to='', verbose_name='Upload Shapefile')),
                ('shape_length', models.FloatField(blank=True, default=0, null=True)),
                ('shape_area', models.FloatField(blank=True, default=0, null=True)),
                ('geom', django.contrib.gis.db.models.fields.GeometryCollectionField(blank=True, null=True, srid=4326)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_customshapefile_creator', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_customshapefile_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ComputedResultItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('key', models.CharField(max_length=128)),
                ('label', models.CharField(blank=True, help_text='Pixel label', max_length=255, null=True)),
                ('count', models.IntegerField(help_text='Pixel count')),
                ('value', models.FloatField(help_text='Value of area')),
                ('custom_string_01', models.CharField(blank=True, help_text='String 01', max_length=255, null=True)),
                ('custom_string_02', models.CharField(blank=True, help_text='String 02', max_length=255, null=True)),
                ('custom_string_03', models.CharField(blank=True, help_text='String 03', max_length=255, null=True)),
                ('custom_string_04', models.CharField(blank=True, help_text='String 04', max_length=255, null=True)),
                ('custom_string_05', models.CharField(blank=True, help_text='String 05', max_length=255, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_computedresultitem_creator', to=settings.AUTH_USER_MODEL)),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common_gis.computedresult')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_computedresultitem_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('result',),
            },
        ),
        migrations.AddField(
            model_name='computedresult',
            name='continent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common_gis.continentaladminlevel'),
        ),
        migrations.AddField(
            model_name='computedresult',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_computedresult_creator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='computedresult',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='computedresult',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common_gis.regionaladminlevel'),
        ),
        migrations.AddField(
            model_name='computedresult',
            name='scheduled_precomputation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common_gis.scheduledprecomputation'),
        ),
        migrations.AddField(
            model_name='computedresult',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_computedresult_updater', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ComputationThreshold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('datasource', models.CharField(choices=[('', ''), ('Hansen', 'Hansen'), ('LULC', 'LULC'), ('Landsat 7', 'Landsat 7'), ('Landsat 8', 'Landsat 8'), ('Modis', 'Modis'), ('Sentinel 2', 'Sentinel 2')], help_text='Datasource', max_length=255, unique=True)),
                ('enable_guest_user_limit', models.BooleanField(default=True, help_text='If checked, guest users will process polygons upto a specific polygon size')),
                ('guest_user_threshold', models.FloatField(help_text='Maximum size of polygon in hectares that anonymous users can process using the system for the selected datasource')),
                ('enable_signedup_user_limit', models.BooleanField(default=True, help_text='If checked, Logged in users will process polygons upto a specific polygon size')),
                ('authenticated_user_threshold', models.FloatField(help_text='Maximum size of polygon in hectares that anonymous users can process using the system for the selected datasource')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_computationthreshold_creator', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_computationthreshold_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common_gis.attribute')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_attributevalue_creator', to=settings.AUTH_USER_MODEL)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common_gis.feature')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_attributevalue_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='attribute',
            name='shapefile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common_gis.shapefile'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_attribute_updater', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='adminlevelzero',
            name='regional_admin',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common_gis.regionaladminlevel'),
        ),
        migrations.AddField(
            model_name='adminlevelzero',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_adminlevelzero_updater', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='adminlevelone',
            name='admin_zero',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common_gis.adminlevelzero'),
        ),
        migrations.AddField(
            model_name='adminlevelone',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_adminlevelone_creator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='adminlevelone',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_gis_adminlevelone_updater', to=settings.AUTH_USER_MODEL),
        ),
    ]
