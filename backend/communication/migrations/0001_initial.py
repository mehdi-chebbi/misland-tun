# Generated by Django 3.2 on 2022-11-25 16:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SMSError',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('posting_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Date when Error was logged')),
                ('error_type', models.CharField(help_text='Type of error', max_length=15, null=True)),
                ('error_description', models.TextField(help_text='Error description', null=True)),
                ('arguments', models.TextField(blank=True, help_text='Request arguments', null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='communication_smserror_creator', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='communication_smserror_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OutboundSMS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('posting_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Date when SMS was created')),
                ('message', models.TextField(help_text='SMS Message')),
                ('recipient', models.CharField(help_text='Message recipients', max_length=255)),
                ('sent_status', models.CharField(choices=[('Pending', 'Pending'), ('Sent', 'Sent'), ('Failed', 'Failed')], default='Pending', help_text='Sent status', max_length=50)),
                ('message_type', models.CharField(help_text='Type of message', max_length=255)),
                ('response_text', models.TextField(blank=True, help_text='Response message from carrier network', null=True)),
                ('response_code', models.IntegerField(blank=True, help_text='Response status codes from carrier network', null=True)),
                ('response_message_id', models.CharField(blank=True, help_text='ID assigned to an SMS by the carrier network', max_length=50, null=True)),
                ('is_delivered', models.BooleanField(blank=True, help_text='Has the SMS been delivered', null=True)),
                ('delivery_response_text', models.TextField(blank=True, help_text='Delivery status response message from carrier network', null=True)),
                ('delivery_status', models.TextField(blank=True, help_text='Delivery status of the message', null=True)),
                ('delivery_date', models.DateTimeField(blank=True, help_text='Date/Time when SMS was delivered', null=True)),
                ('reference_doctype', models.CharField(blank=True, help_text='Type of record associated with this SMS', max_length=255, null=True)),
                ('reference_docname', models.IntegerField(blank=True, help_text='ID of record associated with this SMS', null=True)),
                ('sms_units', models.IntegerField(blank=True, help_text='SMS units utilized to send this SMS', null=True)),
                ('sms_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Cost to send SMS', max_digits=20, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='communication_outboundsms_creator', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='communication_outboundsms_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IssueType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('issue_type_name', models.CharField(help_text='Issue type', max_length=255)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='communication_issuetype_creator', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='communication_issuetype_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IssueCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('category_name', models.CharField(help_text='Issue category', max_length=255)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='communication_issuecategory_creator', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='communication_issuecategory_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InboundSMS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('posting_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Date when SMS was sent')),
                ('message', models.TextField(help_text='SMS Message')),
                ('phone_number', models.CharField(help_text="Sender's phone number", max_length=15)),
                ('timestamp', models.CharField(blank=True, help_text="When the message was received on the carrier's network", max_length=15, null=True)),
                ('network', models.CharField(blank=True, help_text='Which carrier network was the message sent through', max_length=15, null=True)),
                ('shortcode', models.CharField(blank=True, help_text='Which shortcode was the message sent to', max_length=15, null=True)),
                ('message_id', models.CharField(blank=True, help_text='Id assigned to the message by the carrier', max_length=15, null=True)),
                ('approval_status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', help_text='Approval status', max_length=50)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='communication_inboundsms_creator', to=settings.AUTH_USER_MODEL)),
                ('issue_category', models.ForeignKey(blank=True, help_text='Broad issue categorization', null=True, on_delete=django.db.models.deletion.CASCADE, to='communication.issuecategory')),
                ('issue_type', models.ForeignKey(blank=True, help_text='Specific type of issue', null=True, on_delete=django.db.models.deletion.CASCADE, to='communication.issuetype')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='communication_inboundsms_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
